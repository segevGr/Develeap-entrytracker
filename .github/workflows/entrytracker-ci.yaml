name: entrytracker-ci

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write

paths-ignore:
  - "README.md"

jobs:
  building_and_unit_testing:
    runs-on: ubuntu-latest
    name: Building and Unit Testing
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install dependencies
        run: pip install --no-cache-dir -r requirements.txt

      - name: run app
        run: python app.py &

      - name: Testing
        uses: ./.github/actions/retry
        with:
          command: curl -s http://localhost:5000/ | grep current_entry

  packaging_e2e_testing_and_deploy:
    runs-on: ubuntu-latest
    name: Packaging E2E Testing and Deploy
    needs: building_and_unit_testing
    outputs:
      new_tag: ${{steps.version.outputs.new_tag}}

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Building
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          load: true
          tags: entrytracker:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Docker Compose
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: docker compose up -d

      - name: Testing
        uses: ./.github/actions/retry
        with:
          command: curl -s http://localhost:80/ | grep previous_entries

      - name: cleanup
        run: docker compose down

      - name: fetch tag
        id: version
        uses: ./.github/actions/version-increment

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Run push command
        env:
          TAG: ${{steps.version.outputs.new_tag}}
        run: |
          docker tag entrytracker:test 255731431095.dkr.ecr.ap-south-1.amazonaws.com/github-actions/entrytracker:$TAG
          docker push 255731431095.dkr.ecr.ap-south-1.amazonaws.com/github-actions/entrytracker:$TAG

  # publish:
  #   runs-on: ubuntu-latest
  #   name: Publish
  #   needs: packaging_e2e_testing_and_deploy
  #   env:
  #     Tag: ${{steps.version.outputs.new_tag}}

  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v4

  #     - name: upload docker compose to EC2
  #       uses: appleboy/scp-action@v0.1.7
  #       with:
  #         host: ${{ secrets.EC2_HOST }}
  #         username: ${{ secrets.EC2_USER }}
  #         key: ${{ secrets.EC2_SSH_KEY }}
  #         source: "/compose.yaml"
  #         target: "~"

  #     - name: connection with ssh to ec2
  #       uses: appleboy/ssh-action@v1.0.0
  #       with:
  #         host: ${{ secrets.EC2_HOST }}
  #         username: ${{ secrets.EC2_USER }}
  #         key: ${{ secrets.EC2_SSH_KEY }}
  #         script: |
  #           docker compose -f docker-compose.yml down || true

  #           docker images -q 255731431095.dkr.ecr.ap-south-1.amazonaws.com/github-actions/entrytracker:$TAG \
  #             | xargs -r docker rmi -f || true

  #           aws ecr get-login-password --region ap-south-1 \
  #             | docker login --username AWS --password-stdin 255731431095.dkr.ecr.ap-south-1.amazonaws.com

  #           docker compose -f docker-compose.yml pull

  #           docker compose -f docker-compose.yml up -d

  #     - name: push new version to github
  #       run: |
  #         git tag $TAG
  #         git push origin $TAG
